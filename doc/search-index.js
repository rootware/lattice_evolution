var searchIndex = new Map(JSON.parse('[\
["lattice_evolution",{"doc":"","t":"SSCCHCCFSSSNNNONNNNNNONNNOOONNNONOONNNNNNNNNNFSSSNNNNNNONNNNOONNNNONNNNNNNNOOONNNNOONNNNONNNNNNNNNCJJJJSSSSSSSSSSS","n":["FREQ","TOGGLE_INIT","jittery_lattice","lattice","main","shaking_sequences","units","JitteryLattice","MASS","N_STATES","N_STEPS","accelerate","borrow","borrow_mut","depth","deref","deref_mut","drop","fmt","from","from_subset","g","get_depth","get_hamiltonian","get_psi","h0","h1","h2","init","into","is_in_subset","jitter","new","psi","q","rk4step","set_depth","step","to_subset","to_subset_unchecked","try_from","try_into","type_id","update","vzip","Lattice","MASS","N_STATES","N_STEPS","acc_cfi","acc_depth_cfi","acc_qfi","accelerate","borrow","borrow_mut","depth","depth_cfi","depth_qfi","deref","deref_mut","dpsi_a","dpsi_v","drop","fmt","from","from_subset","g","get_acceleration","get_depth","get_dmomentum_da","get_dpsi_a","get_hamiltonian","get_momentum","get_psi","get_time","h0","h1","h2","init","into","is_in_subset","new","psi","q","rk4step","set_depth","set_time","step","time","to_subset","to_subset_unchecked","try_from","try_into","type_id","update","update_d_v","update_da","vzip","shaking","L_SHAKING","MP_SHAKING","OPTION1_SHAKING","SP_SHAKING","ACC_UNIT","ATOMICMASS","E_R","G","HBAR","K_L","LAMBDA","MASS_DALTON","MASS_SI","OMEGA_R","TIME_UNIT"],"q":[[0,"lattice_evolution"],[7,"lattice_evolution::jittery_lattice"],[45,"lattice_evolution::lattice"],[98,"lattice_evolution::shaking_sequences"],[99,"lattice_evolution::shaking_sequences::shaking"],[103,"lattice_evolution::units"],[114,"core::fmt"],[115,"core::fmt"],[116,"nalgebra::base::alias"],[117,"nalgebra::base::alias"],[118,"core::result"],[119,"core::any"]],"d":["This const is usually used to fix $\\\\omega$ for our shaking …","Decide if we first shake to the +ve or -ve x direction. …","","","#Description of code:","","","Lattice struct represents an instance of the Shaken …","","","","Accelerate the wavepacket by adding an <em>impulse</em> to $q$ and …","","","lattice depth","","","","","Returns the argument unchanged.","","acceleration/gravity","Returns $V_0$ of this Lattice","Returns full Hamiltonian with $\\\\phi=0$ ","Current Wavefunction of the wavepacket","The Kinetic part of the Hamiltonian","The $sin(\\\\phi)$ part of the lattice coupling","the $\\\\cos(\\\\phi)$ part of the lattice coupling","","Calls <code>U::from(self)</code>.","","","Initializes the Lattice and makes a new instnce Uses given …","current wavefunction of wavepacket moving through lattice","Correction to pure momentum, $(p+q)$ is kinematic momentum","The RK4 step.","Sets $V_0$ of this Lattice","Evolve wavepacket in this lattice given $(A,\\\\omega)$ for …","","","","","","update is essentially the derivative to the wavepacket at …","","Lattice struct represents an instance of the Shaken …","","","","","","","Accelerate the wavepacket by adding an <em>impulse</em> to $q$ and …","","","lattice depth","","","","","","","","","Returns the argument unchanged.","","acceleration/gravity","Returns $a$ of this Lattice","Returns $V_0$ of this Lattice","","","Returns full Hamiltonian with $\\\\phi=0$ ","","Current Wavefunction of the wavepacket","","The Kinetic part of the Hamiltonian","The $sin(\\\\phi)$ part of the lattice coupling","the $\\\\cos(\\\\phi)$ part of the lattice coupling","","Calls <code>U::from(self)</code>.","","Initializes the Lattice and makes a new instnce Uses given …","current wavefunction of wavepacket moving through lattice","Correction to pure momentum, $(p+q)$ is kinematic momentum","The RK4 step.","Sets $V_0$ of this Lattice","Sets time of this lattice. Used only when we’re manually …","Evolve wavepacket in this lattice given $(A,\\\\omega)$ for …","time","","","","","","update is essentially the derivative to the wavepacket at …","","update_d is essentially the derivative to the state …","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":"````{{}b}``````{{df}b}{ce{}{}}0`{hc{}}0{hb}{{dj}l}{cc{}}4`{df}{d{{A`{n}}}}{d{{Ab{n}}}}```{{}h}8{cAd{}}`{{fff}d}``{{dfffff}b}<{{dff}b}{c{{Af{e}}}{}{}}={c{{Ah{e}}}{}{}}0{cAj{}}{{d{Ab{n}}ffff}{{Ab{n}}}}{ce{}{}}````{Alf}00{{Alf}b}22`11{hc{}}0``{hb}{{Alj}l}{cc{}}6`55{Al{{Ab{f}}}}{Al{{Ab{n}}}}{Al{{A`{n}}}}218```{{}h}:{cAd{}}{{ff}Al}``{{Alffff}b};;{{Alff}b}`{c{{Af{e}}}{}{}}?{c{{Ah{e}}}{}{}}0{cAj{}}{{Al{Ab{n}}fff}{{Ab{n}}}}{{Al{Ab{n}}{Ab{n}}fff}{{Ab{n}}}}0{ce{}{}}````````````````","c":[],"p":[[1,"unit"],[5,"JitteryLattice",7],[1,"f64"],[1,"usize"],[5,"Formatter",114],[8,"Result",114],[8,"Complex64",115],[8,"DMatrix",116],[8,"DVector",116],[1,"bool"],[6,"Option",117],[6,"Result",118],[5,"TypeId",119],[5,"Lattice",45]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);

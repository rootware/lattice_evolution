var searchIndex = JSON.parse('{\
"lattice_evolution":{"doc":"","t":"RRAFDRRRLLLMLLLLLLMLLLMMMLLLLMMLLLLLLLLL","n":["FREQ","TOGGLE_INIT","lattice","main","Lattice","MASS","N_STATES","N_STEPS","accelerate","borrow","borrow_mut","depth","deref","deref_mut","drop","fmt","from","from_subset","g","get_depth","get_hamiltonian","get_psi","h0","h1","h2","init","into","is_in_subset","new","psi","q","rk4step","set_depth","step","to_subset","to_subset_unchecked","try_from","try_into","type_id","update"],"q":[[0,"lattice_evolution"],[4,"lattice_evolution::lattice"],[40,"core::fmt"],[41,"core::fmt"],[42,"nalgebra::base::alias"],[43,"nalgebra::base::alias"],[44,"core::result"],[45,"core::any"]],"d":["This const is usually used to fix $\\\\omega$ for our shaking …","Decide if we first shake to the +ve or -ve x direction. …","","#Description of code:","Lattice struct represents an instance of the Shaken …","","","","Accelerate the wavepacket by adding an <em>impulse</em> to $q$ and …","","","lattice depth","","","","","Returns the argument unchanged.","","acceleration/gravity","Returns $V_0$ of this Lattice","Returns full Hamiltonian with $\\\\phi=0$ ","Current Wavefunction of the wavepacket","The Kinetic part of the Hamiltonian","The $sin(\\\\phi)$ part of the lattice coupling","the $\\\\cos(\\\\phi)$ part of the lattice coupling","","Calls <code>U::from(self)</code>.","","Initializes the Lattice and makes a new instnce Uses given …","current wavefunction of wavepacket moving through lattice","Correction to pure momentum, $(p+q)$ is kinematic momentum","The RK4 step.","Sets $V_0$ of this Lattice","Evolve wavepacket in this lattice given $(A,\\\\omega)$ for …","","","","","","update is essentially the derivative to the wavepacket at …"],"i":[0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],"f":[0,0,0,[[],1],0,0,0,0,[[2,3],1],[-1,-2,[],[]],[-1,-2,[],[]],0,[4,-1,[]],[4,-1,[]],[4,1],[[2,5],6],[-1,-1,[]],[-1,-2,[],[]],0,[2,3],[2,[[8,[7]]]],[2,[[9,[7]]]],0,0,0,[[],4],[-1,-2,[],[]],[-1,10,[]],[[3,3],2],0,0,[[2,3,3,3,3],1],[[2,3],1],[[2,3,3],1],[-1,[[11,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[[2,[9,[7]],3,3,3],[[9,[7]]]]],"c":[],"p":[[15,"tuple"],[3,"Lattice",4],[15,"f64"],[15,"usize"],[3,"Formatter",40],[6,"Result",40],[6,"Complex64",41],[6,"DMatrix",42],[6,"DVector",42],[15,"bool"],[4,"Option",43],[4,"Result",44],[3,"TypeId",45]],"b":[]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
